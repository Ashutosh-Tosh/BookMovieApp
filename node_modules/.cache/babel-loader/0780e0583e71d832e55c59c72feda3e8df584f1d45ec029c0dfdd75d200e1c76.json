{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport { parsePath } from './PathUtils';\nexport var createLocation = function createLocation(path, state, key, currentLocation) {\n  var location = void 0;\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n  if (key) location.key = key;\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n  return location;\n};\nexport var locationsAreEqual = function locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n};","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","resolvePathname","valueEqual","parsePath","createLocation","path","state","currentLocation","location","pathname","undefined","search","charAt","hash","decodeURI","e","URIError","locationsAreEqual","a","b"],"sources":["C:/Users/ashut/OneDrive/Desktop/UPGRAD/React-Project/BookMovieApp/BookMovieApp/node_modules/history/es/LocationUtils.js"],"sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nimport resolvePathname from 'resolve-pathname';\r\nimport valueEqual from 'value-equal';\r\nimport { parsePath } from './PathUtils';\r\n\r\nexport var createLocation = function createLocation(path, state, key, currentLocation) {\r\n  var location = void 0;\r\n  if (typeof path === 'string') {\r\n    // Two-arg form: push(path, state)\r\n    location = parsePath(path);\r\n    location.state = state;\r\n  } else {\r\n    // One-arg form: push(location)\r\n    location = _extends({}, path);\r\n\r\n    if (location.pathname === undefined) location.pathname = '';\r\n\r\n    if (location.search) {\r\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\r\n    } else {\r\n      location.search = '';\r\n    }\r\n\r\n    if (location.hash) {\r\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\r\n    } else {\r\n      location.hash = '';\r\n    }\r\n\r\n    if (state !== undefined && location.state === undefined) location.state = state;\r\n  }\r\n\r\n  try {\r\n    location.pathname = decodeURI(location.pathname);\r\n  } catch (e) {\r\n    if (e instanceof URIError) {\r\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  if (key) location.key = key;\r\n\r\n  if (currentLocation) {\r\n    // Resolve incomplete/relative pathname relative to current location.\r\n    if (!location.pathname) {\r\n      location.pathname = currentLocation.pathname;\r\n    } else if (location.pathname.charAt(0) !== '/') {\r\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\r\n    }\r\n  } else {\r\n    // When there is no prior location and pathname is empty, set it to /\r\n    if (!location.pathname) {\r\n      location.pathname = '/';\r\n    }\r\n  }\r\n\r\n  return location;\r\n};\r\n\r\nexport var locationsAreEqual = function locationsAreEqual(a, b) {\r\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}