{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashut\\\\OneDrive\\\\Desktop\\\\UPGRAD\\\\React-Project\\\\BookMovieApp\\\\BookMovieApp\\\\src\\\\screens\\\\home\\\\UpcomingGrid.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n});\n\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n * \r\n * \r\n *  {tileData.map(tile => (\r\n          <GridListTile key={tile.img}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n              actionIcon={\r\n                <IconButton>\r\n                  <StarBorderIcon className={classes.title} />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n * \r\n * \r\n * \r\n * \r\n */\nfunction UpcomingGrid(props) {\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      className: classes.gridList,\n      cols: 2.5,\n      children: /*#__PURE__*/_jsxDEV(GridListTile, {\n        children: [\"sdsd\", /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: \"ssssa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), \"sdsd\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_c = UpcomingGrid;\nSingleLineGridList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default UpcomingGrid(styles)(SingleLineGridList);\nvar _c;\n$RefreshReg$(_c, \"UpcomingGrid\");","map":{"version":3,"names":["React","PropTypes","withStyles","Grid","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","light","titleBar","UpcomingGrid","props","classes","SingleLineGridList","propTypes","object","isRequired"],"sources":["C:/Users/ashut/OneDrive/Desktop/UPGRAD/React-Project/BookMovieApp/BookMovieApp/src/screens/home/UpcomingGrid.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n});\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n * \r\n * \r\n *  {tileData.map(tile => (\r\n          <GridListTile key={tile.img}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n              actionIcon={\r\n                <IconButton>\r\n                  <StarBorderIcon className={classes.title} />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n * \r\n * \r\n * \r\n * \r\n */\r\nfunction UpcomingGrid(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList className={classes.gridList} cols={2.5}>\r\n        <GridListTile>sdsd\r\n            <GridListTileBar title=\"ssssa\"/>sdsd\r\n        </GridListTile>\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n\r\nSingleLineGridList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default UpcomingGrid(styles)(SingleLineGridList);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,cAAc,MAAM,+BAA+B;AAAC;AAG3D,MAAMC,MAAM,GAAGC,KAAK,KAAK;EACvBC,IAAI,EAAE;IACJC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE,MAAM;IAChBC,cAAc,EAAE,cAAc;IAC9BC,QAAQ,EAAE,QAAQ;IAClBC,eAAe,EAAEN,KAAK,CAACO,OAAO,CAACC,UAAU,CAACC;EAC5C,CAAC;EACDC,QAAQ,EAAE;IACRP,QAAQ,EAAE,QAAQ;IAClB;IACAQ,SAAS,EAAE;EACb,CAAC;EACDC,KAAK,EAAE;IACLC,KAAK,EAAEb,KAAK,CAACO,OAAO,CAACO,OAAO,CAACC;EAC/B,CAAC;EACDC,QAAQ,EAAE;IACRR,UAAU,EACR;EACJ;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,YAAY,CAACC,KAAK,EAAE;EAC3B,MAAM;IAAEC;EAAQ,CAAC,GAAGD,KAAK;EAEzB,oBACE;IAAK,SAAS,EAAEC,OAAO,CAAClB,IAAK;IAAA,uBAC3B,QAAC,QAAQ;MAAC,SAAS,EAAEkB,OAAO,CAACT,QAAS;MAAC,IAAI,EAAE,GAAI;MAAA,uBAC/C,QAAC,YAAY;QAAA,WAAC,MACV,uBAAC,eAAe;UAAC,KAAK,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAE,QACpC;MAAA;QAAA;QAAA;QAAA;MAAA;IAAe;MAAA;MAAA;MAAA;IAAA;EACN;IAAA;IAAA;IAAA;EAAA,QACP;AAEV;AAAC,KAZQO,YAAY;AAcrBG,kBAAkB,CAACC,SAAS,GAAG;EAC7BF,OAAO,EAAE5B,SAAS,CAAC+B,MAAM,CAACC;AAC5B,CAAC;AAED,eAAeN,YAAY,CAAClB,MAAM,CAAC,CAACqB,kBAAkB,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}