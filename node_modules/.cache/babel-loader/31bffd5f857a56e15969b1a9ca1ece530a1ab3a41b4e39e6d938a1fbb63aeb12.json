{"ast":null,"code":"export var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexport var addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\nexport var removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\nexport var getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\nexport var supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n};\n\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\nexport var supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\nexport var supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nexport var isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};","map":{"version":3,"names":["canUseDOM","window","document","createElement","addEventListener","node","event","listener","attachEvent","removeEventListener","detachEvent","getConfirmation","message","callback","confirm","supportsHistory","ua","navigator","userAgent","indexOf","history","supportsPopStateOnHashChange","supportsGoWithoutReloadUsingHash","isExtraneousPopstateEvent","state","undefined"],"sources":["C:/Users/ashut/OneDrive/Desktop/UPGRAD/React-Project/BookMovieApp/BookMovieApp/node_modules/history/es/DOMUtils.js"],"sourcesContent":["export var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nexport var addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\n\nexport var removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\n\nexport var getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\nexport var supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n\n  return window.history && 'pushState' in window.history;\n};\n\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\nexport var supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\nexport var supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nexport var isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};"],"mappings":"AAAA,OAAO,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,aAAa,CAAC;AAE5G,OAAO,IAAIC,gBAAgB,GAAG,SAASA,gBAAgB,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EAC7E,OAAOF,IAAI,CAACD,gBAAgB,GAAGC,IAAI,CAACD,gBAAgB,CAACE,KAAK,EAAEC,QAAQ,EAAE,KAAK,CAAC,GAAGF,IAAI,CAACG,WAAW,CAAC,IAAI,GAAGF,KAAK,EAAEC,QAAQ,CAAC;AACzH,CAAC;AAED,OAAO,IAAIE,mBAAmB,GAAG,SAASA,mBAAmB,CAACJ,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EACnF,OAAOF,IAAI,CAACI,mBAAmB,GAAGJ,IAAI,CAACI,mBAAmB,CAACH,KAAK,EAAEC,QAAQ,EAAE,KAAK,CAAC,GAAGF,IAAI,CAACK,WAAW,CAAC,IAAI,GAAGJ,KAAK,EAAEC,QAAQ,CAAC;AAC/H,CAAC;AAED,OAAO,IAAII,eAAe,GAAG,SAASA,eAAe,CAACC,OAAO,EAAEC,QAAQ,EAAE;EACvE,OAAOA,QAAQ,CAACZ,MAAM,CAACa,OAAO,CAACF,OAAO,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIG,eAAe,GAAG,SAASA,eAAe,GAAG;EACtD,IAAIC,EAAE,GAAGf,MAAM,CAACgB,SAAS,CAACC,SAAS;EAEnC,IAAI,CAACF,EAAE,CAACG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAIH,EAAE,CAACG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,KAAKH,EAAE,CAACG,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,IAAIH,EAAE,CAACG,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAIH,EAAE,CAACG,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK;EAElM,OAAOlB,MAAM,CAACmB,OAAO,IAAI,WAAW,IAAInB,MAAM,CAACmB,OAAO;AACxD,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,IAAIC,4BAA4B,GAAG,SAASA,4BAA4B,GAAG;EAChF,OAAOpB,MAAM,CAACgB,SAAS,CAACC,SAAS,CAACC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC7D,CAAC;;AAED;AACA;AACA;AACA,OAAO,IAAIG,gCAAgC,GAAG,SAASA,gCAAgC,GAAG;EACxF,OAAOrB,MAAM,CAACgB,SAAS,CAACC,SAAS,CAACC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC7D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,IAAII,yBAAyB,GAAG,SAASA,yBAAyB,CAACjB,KAAK,EAAE;EAC/E,OAAOA,KAAK,CAACkB,KAAK,KAAKC,SAAS,IAAIR,SAAS,CAACC,SAAS,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACjF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}